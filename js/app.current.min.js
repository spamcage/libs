/**
 * Created by Hongcai Deng on 2015/12/29.
 */
function getParameterByName(name, url = window.location.href) {
  name = name.replace(/[\[\]]/g, '\\$&');
  var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
    results = regex.exec(url);
  if (!results) return null;
  if (!results[2]) return '';
  return decodeURIComponent(results[2].replace(/\+/g, ' '));
}

function randomMailHost(recv) {
  return recv[Math.floor((Math.random() * recv.length))];
}

const storage = {
  get(k) {
    return localStorage.getItem(k) || Cookies.get(k);
  },
  set(k, v) {
    localStorage.setItem(k, v);
    Cookies.set(k, v, {
      expires: 365,
    });
  }
}

$(function () {
  // $('.ui.modal')
  //   .modal();

  $('.baslik').on('click', function () {
    var $langlist = $(this).next('ul');
    if ($langlist.hasClass('acik')) {
      $langlist.removeClass('acik');
    } else {
      $langlist.addClass('acik');
    }
  });

  // 从 query 上获取并覆盖
  var shortIdInQuery = getParameterByName('inboxId');
  var mailhostInQuery = getParameterByName('mailhost');
  if (!!shortIdInQuery) {
    storage.set('shortid', shortIdInQuery);
    storage.set('mailhost', mailhostInQuery);
  }

  var mailhost = storage.get('mailhost') || '';
  var mailHostList = [];

  new ClipboardJS('.copyable');

  $customShortId = $('#customShortid');
  $shortId = $('#shortid');
  $customTheme = 'check';
  $placeholder_old = '';
  $customShortId.on('click', function () {
    var self = $(this);
    $shortId.removeAttr("readonly");
    if (self.hasClass('edit')) {
      $shortId.val('');
      self.removeClass('edit');
      self.toggleClass($customTheme);
      self.find('em.custom_btn').hide();
      self.find('em.confirm_btn').show();
      $placeholder_old = $shortId.prop('placeholder');
      $shortId.prop('placeholder', $shortId.attr('editplaceholder'));
    } else {
      mailhost = randomMailHost(mailHostList);
      $shortId.attr("readonly", "true");
      self.removeClass('check');
      self.find('em.custom_btn').show();
      self.find('em.confirm_btn').hide();
      self.toggleClass('edit');
      $shortId.prop('placeholder', $placeholder_old);
      $mailUser = $shortId.val().toLowerCase();
      var mailaddress = $mailUser + '@' + mailhost;
      setMailAddress($mailUser);
      $shortId.val(mailaddress);
      window.location.reload();
    }
  });

  $('#share').on('click', function () {
    $shareContaienr = $('#share_qr_container');
    $indexContaienr = $('#index_container');
    if ($shareContaienr.hasClass('goster')) {
      $shareContaienr.removeClass('goster');
      $indexContaienr.addClass('goster');
    } else {
      $shareContaienr.addClass('goster');
      $indexContaienr.removeClass('goster');
    }
  });


  $maillist = $('#maillist');

  $('#back').on("click", function () {
    $('#panel2').hide();
    $('#panel1').show();
  });

  $('#plain').on("click", function () {
    $('#content').hide();
    $('#rawcontent').show();
    Prism.highlightAll();
  });

  var socket = io(window.ioDomain);

  var setMailAddress = function (id) {
    storage.set('shortid', id);
    var mailaddress = id + '@' + mailhost;
    var shareAddress = rootDomain + '?inboxId=' + encodeURIComponent(id) + '&mailhost=' + encodeURIComponent(mailhost);
    $('#shortid').val(mailaddress);
    $('#kare_kod_adres').attr('data-clipboard-text', shareAddress);
    $('#kare_kod_adres').attr('value', shareAddress);
    $('#share_qr').attr('src', 'https://api.qrserver.com/v1/create-qr-code/?data=' + encodeURIComponent(shareAddress) + '&size=150x150')
  };

  $('#refreshShortid').click(function () {
    socket.emit('request shortid', true);
  });

  try {
    const mailHostsJsonString = Cookies.get('mailhosts');
    mailHostList = JSON.parse(mailHostsJsonString);
    mailhost = randomMailHost(mailHostList);
  } catch (err) {
    console.error(err);
  }

  // 提前加载时间
  (function () {
    const shortid = storage.get('shortid');
    if (shortid) {
      setMailAddress(shortid);
    }
    socket.on('connect', function () {
      socket.emit('get domain');
      if (!shortid) {
        socket.emit('request shortid', true);
      } else {
        socket.emit('set shortid', shortid);
      }
    });
  })();

  socket.on('mailHost', function (recv) {
    mailHostList = recv;
    if (!mailhost) {
      mailhost = randomMailHost(recv);
    }
  });

  socket.on('shortid', function (id) {
    setMailAddress(id);
  });

  socket.on('statistics', function (statistic) {
    $statistic = $('#statistic-text');
    if (statistic.hasOwnProperty('mailCount')) {
      $statistic.find('.total_email_count').text(statistic.mailCount);
    }
    if (statistic.hasOwnProperty('todayMailCount')) {
      $statistic.find('.today_email_count').text(statistic.todayMailCount);
    }
    // if (statistic.hasOwnProperty('accountCount')) {
    //   $statistic.find('.created_inbox_count').text(statistic.accountCount);
    // }
    $statistic.prop('style', '');
  });

  socket.on('mail', function (mail) {
    // 关闭通知功能
    if (false && ('Notification' in window)) {
      if (Notification.permission === 'granted') {
        new Notification('New mail from ' + mail.headers.from);
      } else if (Notification.permission !== 'denied') {
        Notification.requestPermission(function (permission) {
          if (permission === 'granted') {
            new Notification('New mail from ' + mail.headers.from);
          }
        })
      }
    }
    $li = $('<li class="mail active">').data('mail', mail);
    $link = $('<a href="javascript:void(0)">');

    $link
      .append('<div class="avatar"><img src="https://cdn.jsdelivr.net/gh/spamcage/libs/images/posta.png"></div>')
      .append($('<div class="gonderen">').text(mail.headers.from))
      .append($('<div class="baslik">').text(mail.headers.subject || 'None'))
      .append('<div class="zaman"><img src="https://cdn.jsdelivr.net/gh/spamcage/libs/images/arrow-right.png"></div>');
    $li.append($link);
    $li.on("click", "a", function () {
      console.log(mail.headers.from);

      $('#summary').html('&lt;' + mail.headers.from + '&gt; <strong>' + (mail.headers.subject || 'None') + '</strong>');
      $('#content').html(mail.html);
      $('#content').show();

      if (mail.attachments) {
        $attachments = $('#attachments');
        mail.attachments.forEach(function (attachment) {
          $attachment = $(`<a href="javascript:void(0)" style="display: block">${attachment.generatedFileName}</a>`);
          $attachment.on('click', function () {
            if (typeof attachment.content === 'string') {
              download(atob(attachment.content), attachment.generatedFileName, attachment.contentType);
            } else {
              alert('file is too large');
            }
          });
          $attachments.after($attachment);
        });
      }

      $('#rawcontent').html($('<pre>').html($('<code>').addClass('language-json').html(JSON.stringify(mail, null, 2))));
      $('#rawcontent').hide();
      $('#panel1').hide();
      $('#panel2').show();
    });
    $maillist.after($li);
    $('#emptybox').hide();
  });

});